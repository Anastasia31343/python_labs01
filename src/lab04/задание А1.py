import csv
from pathlib import Path
from typing import Iterable, Sequence, Union


def read_text(path: Union[str, Path], encoding: str = "utf-8") -> str:
   
    file_path = Path(path)
    return file_path.read_text(encoding=encoding)


def write_csv(rows: Iterable[Sequence], path: Union[str, Path], 
              header: tuple[str, ...] = None) -> None:
    
    file_path = Path(path)
    rows_list = list(rows)
    
    if rows_list:
        first_length = len(rows_list[0])
        for i, row in enumerate(rows_list):
            if len(row) != first_length:
                raise ValueError(f"Row {i} has length {len(row)}, expected {first_length}")
    
    file_path.parent.mkdir(parents=True, exist_ok=True)
    
    with file_path.open('w', newline='', encoding='utf-8') as f:
        writer = csv.writer(f)
        if header is not None:
            writer.writerow(header)
        writer.writerows(rows_list)


def ensure_parent_dir(path: Union[str, Path]) -> None:

    file_path = Path(path)
    file_path.parent.mkdir(parents=True, exist_ok=True)

try:
    file_content = read_text("src/lab04/test_io.py.txt")
    print(f"   üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ ({len(file_content)} —Å–∏–º–≤–æ–ª–æ–≤):")
    print(f"   '{file_content[:50]}...'" if len(file_content) > 50 else f"   '{file_content}'")
    print()
        
    print("2. üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    ensure_parent_dir("data/lab04/test_results.csv")
    print("   ‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã!")
    print()
        
    print("3. üíæ –ó–∞–ø–∏—Å—å CSV —Ñ–∞–π–ª–∞...")
        
    test_data = [
        ("—Ñ–∞–π–ª", 1),
        ("–ø—Ä–æ—á–∏—Ç–∞–Ω", 1), 
        ("—É—Å–ø–µ—à–Ω–æ", 1),
        ("test_io", 1),
        ("py", 1)
    ]
        
    write_csv(test_data, "data/lab04/test_output.csv", header=("—Å–ª–æ–≤–æ", "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"))
    print("   ‚úÖ CSV —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: data/lab04/test_output.csv")
    print("   üìä –î–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞–Ω—ã:")
    for word, count in test_data:
        print(f"      {word}: {count}")
    print()
        
    print("4. üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ CSV —Ñ–∞–π–ª–∞...")
    csv_content = read_text("data/lab04/test_output.csv")
    print("   üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ CSV:")
    for line in csv_content.split('\n'):
        if line.strip():
            print(f"      {line}")
    print()
        
    print("üéâ –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    print("=====================================")
        
except FileNotFoundError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω - {e}")
    print("   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª test_io.py —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –ø–∞–ø–∫–µ lab04")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
